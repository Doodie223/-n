<div class="container mt-5">
    <h1 class="mb-4">Room Types Manager</h1>
    <a href="/admin/roomsType/new" class="btn btn-primary mb-3">Add New Room Type</a>
    <div class="table-responsive">
        <table class="table table-bordered table-hover">
            <thead class="table-dark">
                <tr>
                    <th>Type</th>
                    <th>Description</th>
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody>
                {{#each roomsTypes}}
                <tr>
                    <td>{{this.type}}</td>
                    <td>{{this.description}}</td>
                    <td>
                        <a href="/admin/roomsType/edit/{{this._id}}" class="btn btn-warning btn-sm">Edit</a>
                        <button onclick="deleteRoomType('{{this._id}}')" class="btn btn-danger btn-sm">Delete</button>
                    </td>
                </tr>
                {{/each}}
            </tbody>
        </table>
    </div>
</div>

<div id="popupMessage" class="popup-message">
    <p>{{successMessage}}</p>
    <p>{{errorMessage}}</p>
</div>

<script>
    function deleteRoomType(id) {
        if (confirm("Are you sure you want to delete this room type?")) {
            fetch(`/admin/roomsType/delete/${id}`, {
                method: 'DELETE'
            })
                .then(response => {
                    if (!response.ok) {
                        throw new Error('Network response was not ok');
                    }
                    return response.json();
                })
                .then(data => {
                    const { successMessage, errorMessage } = data;
                    const popupMessage = document.getElementById('popupMessage');
                    popupMessage.innerHTML = `<p>${successMessage || errorMessage}</p>`;
                    popupMessage.classList.add('show-popup');
                    setTimeout(function () {
                        popupMessage.classList.remove('show-popup');
                    }, 10000);
                    // Tự động làm mới trang sau khi xóa
                    setTimeout(function () {
                        location.reload();
                    }, 500);
                })
                .catch(error => {
                    console.error('Error:', error);
                });
        }
    }
</script>

<style>
    /* CSS cho popup */
    .popup-message {
        position: fixed;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        background-color: rgba(0, 0, 0, 0.7);
        color: #fff;
        padding: 20px;
        border-radius: 5px;
        z-index: 1000;
        display: none;
        /* Bắt đầu ẩn popup */
    }

    .popup-message p {
        margin: 0;
    }

    .show-popup {
        display: block;
        /* Hiển thị popup */
    }
</style>